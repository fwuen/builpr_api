package com.builpr.database.db.builpr.usercategories.generated;

import com.builpr.database.db.builpr.usercategories.UserCategories;
import com.speedment.common.annotation.GeneratedCode;
import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.builpr.database.db.builpr.usercategories.UserCategories}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedUserCategoriesImpl implements UserCategories {
    
    private int uid;
    private String category;
    
    protected GeneratedUserCategoriesImpl() {
        
    }
    
    @Override
    public int getUid() {
        return uid;
    }
    
    @Override
    public String getCategory() {
        return category;
    }
    
    @Override
    public UserCategories setUid(int uid) {
        this.uid = uid;
        return this;
    }
    
    @Override
    public UserCategories setCategory(String category) {
        this.category = category;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("uid = "      + Objects.toString(getUid()));
        sj.add("category = " + Objects.toString(getCategory()));
        return "UserCategoriesImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof UserCategories)) { return false; }
        final UserCategories thatUserCategories = (UserCategories)that;
        if (this.getUid() != thatUserCategories.getUid()) {return false; }
        if (!Objects.equals(this.getCategory(), thatUserCategories.getCategory())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getUid());
        hash = 31 * hash + Objects.hashCode(getCategory());
        return hash;
    }
}