package com.builpr.database.db.builpr.customtags.generated;

import com.builpr.database.db.builpr.customtags.Customtags;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;

/**
 * The generated base for the {@link
 * com.builpr.database.db.builpr.customtags.Customtags}-interface representing
 * entities of the {@code customtags}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedCustomtags {
    
    /**
     * This Field corresponds to the {@link Customtags} field that can be
     * obtained using the {@link Customtags#getTagId()} method.
     */
    IntField<Customtags, Integer> TAG_ID = IntField.create(
        Identifier.TAG_ID,
        Customtags::getTagId,
        Customtags::setTagId,
        TypeMapper.primitive(), 
        true
    );
    /**
     * This Field corresponds to the {@link Customtags} field that can be
     * obtained using the {@link Customtags#getTagName()} method.
     */
    StringField<Customtags, String> TAG_NAME = StringField.create(
        Identifier.TAG_NAME,
        Customtags::getTagName,
        Customtags::setTagName,
        TypeMapper.identity(), 
        true
    );
    
    /**
     * Returns the tagId of this Customtags. The tagId field corresponds to the
     * database column builpr.builpr.customtags.tag_id.
     * 
     * @return the tagId of this Customtags
     */
    int getTagId();
    
    /**
     * Returns the tagName of this Customtags. The tagName field corresponds to
     * the database column builpr.builpr.customtags.tag_name.
     * 
     * @return the tagName of this Customtags
     */
    String getTagName();
    
    /**
     * Sets the tagId of this Customtags. The tagId field corresponds to the
     * database column builpr.builpr.customtags.tag_id.
     * 
     * @param tagId to set of this Customtags
     * @return      this Customtags instance
     */
    Customtags setTagId(int tagId);
    
    /**
     * Sets the tagName of this Customtags. The tagName field corresponds to the
     * database column builpr.builpr.customtags.tag_name.
     * 
     * @param tagName to set of this Customtags
     * @return        this Customtags instance
     */
    Customtags setTagName(String tagName);
    
    enum Identifier implements ColumnIdentifier<Customtags> {
        
        TAG_ID   ("tag_id"),
        TAG_NAME ("tag_name");
        
        private final String columnName;
        private final TableIdentifier<Customtags> tableIdentifier;
        
        Identifier(String columnName) {
            this.columnName      = columnName;
            this.tableIdentifier = TableIdentifier.of(    getDbmsName(), 
                getSchemaName(), 
                getTableName());
        }
        
        @Override
        public String getDbmsName() {
            return "builpr";
        }
        
        @Override
        public String getSchemaName() {
            return "builpr";
        }
        
        @Override
        public String getTableName() {
            return "customtags";
        }
        
        @Override
        public String getColumnName() {
            return this.columnName;
        }
        
        @Override
        public TableIdentifier<Customtags> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}