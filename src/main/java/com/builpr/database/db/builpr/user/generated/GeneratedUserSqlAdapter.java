package com.builpr.database.db.builpr.user.generated;

import com.builpr.database.db.builpr.user.User;
import com.builpr.database.db.builpr.user.UserImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.common.injector.annotation.ExecuteBefore;
import com.speedment.common.injector.annotation.WithState;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.sql.SqlPersistenceComponent;
import com.speedment.runtime.core.component.sql.SqlStreamSupplierComponent;
import com.speedment.runtime.core.exception.SpeedmentException;
import java.sql.ResultSet;
import java.sql.SQLException;
import static com.speedment.common.injector.State.RESOLVED;

/**
 * The generated Sql Adapter for a {@link
 * com.builpr.database.db.builpr.user.User} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedUserSqlAdapter {
    
    private final TableIdentifier<User> tableIdentifier;
    
    protected GeneratedUserSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("builpr", "builpr", "user");
    }
    
    @ExecuteBefore(RESOLVED)
    void installMethodName(@WithState(RESOLVED) SqlStreamSupplierComponent streamSupplierComponent, @WithState(RESOLVED) SqlPersistenceComponent persistenceComponent) {
        streamSupplierComponent.install(tableIdentifier, this::apply);
        persistenceComponent.install(tableIdentifier);
    }
    
    protected User apply(ResultSet resultSet) throws SpeedmentException {
        final User entity = createEntity();
        try {
            entity.setUserId(       resultSet.getInt(1)       );
            entity.setUsername(     resultSet.getString(2)    );
            entity.setPassword(     resultSet.getString(3)    );
            entity.setEmail(        resultSet.getString(4)    );
            entity.setRegtime(      resultSet.getTimestamp(5) );
            entity.setBirthday(     resultSet.getDate(6)      );
            entity.setFirstname(    resultSet.getString(7)    );
            entity.setLastname(     resultSet.getString(8)    );
            entity.setAvatar(       resultSet.getString(9)    );
            entity.setDescription(  resultSet.getString(10)   );
            entity.setShowName(     resultSet.getInt(11)      );
            entity.setShowBirthday( resultSet.getInt(12)      );
            entity.setShowEmail(    resultSet.getInt(13)      );
            entity.setAccessToken(  resultSet.getString(14)   );
        } catch (final SQLException sqle) {
            throw new SpeedmentException(sqle);
        }
        return entity;
    }
    
    protected UserImpl createEntity() {
        return new UserImpl();
    }
}