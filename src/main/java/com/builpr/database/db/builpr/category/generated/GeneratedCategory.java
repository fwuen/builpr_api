package com.builpr.database.db.builpr.category.generated;

import com.builpr.database.db.builpr.category.Category;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;

/**
 * The generated base for the {@link
 * com.builpr.database.db.builpr.category.Category}-interface representing
 * entities of the {@code category}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedCategory {
    
    /**
     * This Field corresponds to the {@link Category} field that can be obtained
     * using the {@link Category#getCategoryId()} method.
     */
    IntField<Category, Integer> CATEGORY_ID = IntField.create(
        Identifier.CATEGORY_ID,
        Category::getCategoryId,
        Category::setCategoryId,
        TypeMapper.primitive(), 
        true
    );
    /**
     * This Field corresponds to the {@link Category} field that can be obtained
     * using the {@link Category#getCategoryName()} method.
     */
    StringField<Category, String> CATEGORY_NAME = StringField.create(
        Identifier.CATEGORY_NAME,
        Category::getCategoryName,
        Category::setCategoryName,
        TypeMapper.identity(), 
        true
    );
    
    /**
     * Returns the categoryId of this Category. The categoryId field corresponds
     * to the database column builpr.builpr.category.category_id.
     * 
     * @return the categoryId of this Category
     */
    int getCategoryId();
    
    /**
     * Returns the categoryName of this Category. The categoryName field
     * corresponds to the database column builpr.builpr.category.category_name.
     * 
     * @return the categoryName of this Category
     */
    String getCategoryName();
    
    /**
     * Sets the categoryId of this Category. The categoryId field corresponds to
     * the database column builpr.builpr.category.category_id.
     * 
     * @param categoryId to set of this Category
     * @return           this Category instance
     */
    Category setCategoryId(int categoryId);
    
    /**
     * Sets the categoryName of this Category. The categoryName field
     * corresponds to the database column builpr.builpr.category.category_name.
     * 
     * @param categoryName to set of this Category
     * @return             this Category instance
     */
    Category setCategoryName(String categoryName);
    
    enum Identifier implements ColumnIdentifier<Category> {
        
        CATEGORY_ID   ("category_id"),
        CATEGORY_NAME ("category_name");
        
        private final String columnName;
        private final TableIdentifier<Category> tableIdentifier;
        
        Identifier(String columnName) {
            this.columnName      = columnName;
            this.tableIdentifier = TableIdentifier.of(    getDbmsName(), 
                getSchemaName(), 
                getTableName());
        }
        
        @Override
        public String getDbmsName() {
            return "builpr";
        }
        
        @Override
        public String getSchemaName() {
            return "builpr";
        }
        
        @Override
        public String getTableName() {
            return "category";
        }
        
        @Override
        public String getColumnName() {
            return this.columnName;
        }
        
        @Override
        public TableIdentifier<Category> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}