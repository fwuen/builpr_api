package com.builpr.database.db.builpr.rating.generated;

import com.builpr.database.db.builpr.rating.Rating;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;
import java.sql.Date;
import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.builpr.database.db.builpr.rating.Rating}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedRatingImpl implements Rating {
    
    private int uid;
    private int mid;
    private int rating;
    private String msg;
    private Date ratingTime;
    private int rid;
    
    protected GeneratedRatingImpl() {
        
    }
    
    @Override
    public int getUid() {
        return uid;
    }
    
    @Override
    public int getMid() {
        return mid;
    }
    
    @Override
    public int getRating() {
        return rating;
    }
    
    @Override
    public Optional<String> getMsg() {
        return Optional.ofNullable(msg);
    }
    
    @Override
    public Date getRatingTime() {
        return ratingTime;
    }
    
    @Override
    public int getRid() {
        return rid;
    }
    
    @Override
    public Rating setUid(int uid) {
        this.uid = uid;
        return this;
    }
    
    @Override
    public Rating setMid(int mid) {
        this.mid = mid;
        return this;
    }
    
    @Override
    public Rating setRating(int rating) {
        this.rating = rating;
        return this;
    }
    
    @Override
    public Rating setMsg(String msg) {
        this.msg = msg;
        return this;
    }
    
    @Override
    public Rating setRatingTime(Date ratingTime) {
        this.ratingTime = ratingTime;
        return this;
    }
    
    @Override
    public Rating setRid(int rid) {
        this.rid = rid;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("uid = "        + Objects.toString(getUid()));
        sj.add("mid = "        + Objects.toString(getMid()));
        sj.add("rating = "     + Objects.toString(getRating()));
        sj.add("msg = "        + Objects.toString(OptionalUtil.unwrap(getMsg())));
        sj.add("ratingTime = " + Objects.toString(getRatingTime()));
        sj.add("rid = "        + Objects.toString(getRid()));
        return "RatingImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Rating)) { return false; }
        final Rating thatRating = (Rating)that;
        if (this.getUid() != thatRating.getUid()) {return false; }
        if (this.getMid() != thatRating.getMid()) {return false; }
        if (this.getRating() != thatRating.getRating()) {return false; }
        if (!Objects.equals(this.getMsg(), thatRating.getMsg())) {return false; }
        if (!Objects.equals(this.getRatingTime(), thatRating.getRatingTime())) {return false; }
        if (this.getRid() != thatRating.getRid()) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getUid());
        hash = 31 * hash + Integer.hashCode(getMid());
        hash = 31 * hash + Integer.hashCode(getRating());
        hash = 31 * hash + Objects.hashCode(getMsg());
        hash = 31 * hash + Objects.hashCode(getRatingTime());
        hash = 31 * hash + Integer.hashCode(getRid());
        return hash;
    }
}