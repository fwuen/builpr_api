package com.builpr.database.db.builpr.usercategories.generated;

import com.builpr.database.db.builpr.usercategories.UserCategories;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;

/**
 * The generated base for the {@link
 * com.builpr.database.db.builpr.usercategories.UserCategories}-interface
 * representing entities of the {@code UserCategories}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedUserCategories {
    
    /**
     * This Field corresponds to the {@link UserCategories} field that can be
     * obtained using the {@link UserCategories#getUid()} method.
     */
    final IntField<UserCategories, Integer> UID = IntField.create(
        Identifier.UID,
        UserCategories::getUid,
        UserCategories::setUid,
        TypeMapper.primitive(), 
        false
    );
    /**
     * This Field corresponds to the {@link UserCategories} field that can be
     * obtained using the {@link UserCategories#getCategory()} method.
     */
    final StringField<UserCategories, String> CATEGORY = StringField.create(
        Identifier.CATEGORY,
        UserCategories::getCategory,
        UserCategories::setCategory,
        TypeMapper.identity(), 
        false
    );
    
    /**
     * Returns the uid of this UserCategories. The uid field corresponds to the
     * database column builpr.com.builpr.UserCategories.uid.
     * 
     * @return the uid of this UserCategories
     */
    int getUid();
    
    /**
     * Returns the category of this UserCategories. The category field
     * corresponds to the database column
     * builpr.com.builpr.UserCategories.category.
     * 
     * @return the category of this UserCategories
     */
    String getCategory();
    
    /**
     * Sets the uid of this UserCategories. The uid field corresponds to the
     * database column builpr.com.builpr.UserCategories.uid.
     * 
     * @param uid to set of this UserCategories
     * @return    this UserCategories instance
     */
    UserCategories setUid(int uid);
    
    /**
     * Sets the category of this UserCategories. The category field corresponds
     * to the database column builpr.com.builpr.UserCategories.category.
     * 
     * @param category to set of this UserCategories
     * @return         this UserCategories instance
     */
    UserCategories setCategory(String category);
    
    enum Identifier implements ColumnIdentifier<UserCategories> {
        
        UID      ("uid"),
        CATEGORY ("category");
        
        private final String columnName;
        private final TableIdentifier<UserCategories> tableIdentifier;
        
        Identifier(String columnName) {
            this.columnName      = columnName;
            this.tableIdentifier = TableIdentifier.of(    getDbmsName(), 
                getSchemaName(), 
                getTableName());
        }
        
        @Override
        public String getDbmsName() {
            return "builpr.com";
        }
        
        @Override
        public String getSchemaName() {
            return "builpr";
        }
        
        @Override
        public String getTableName() {
            return "UserCategories";
        }
        
        @Override
        public String getColumnName() {
            return this.columnName;
        }
        
        @Override
        public TableIdentifier<UserCategories> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}