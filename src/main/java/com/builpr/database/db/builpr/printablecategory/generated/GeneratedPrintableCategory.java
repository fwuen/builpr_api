package com.builpr.database.db.builpr.printablecategory.generated;

import com.builpr.database.db.builpr.printable.Printable;
import com.builpr.database.db.builpr.printablecategory.PrintableCategory;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.Manager;
import com.speedment.runtime.field.IntForeignKeyField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;

/**
 * The generated base for the {@link
 * com.builpr.database.db.builpr.printablecategory.PrintableCategory}-interface
 * representing entities of the {@code PrintableCategory}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedPrintableCategory {
    
    /**
     * This Field corresponds to the {@link PrintableCategory} field that can be
     * obtained using the {@link PrintableCategory#getPrintableId()} method.
     */
    final IntForeignKeyField<PrintableCategory, Integer, Printable> PRINTABLE_ID = IntForeignKeyField.create(
        Identifier.PRINTABLE_ID,
        PrintableCategory::getPrintableId,
        PrintableCategory::setPrintableId,
        Printable.PRINTABLE_ID,
        TypeMapper.primitive(), 
        false
    );
    /**
     * This Field corresponds to the {@link PrintableCategory} field that can be
     * obtained using the {@link PrintableCategory#getCategorieName()} method.
     */
    final StringField<PrintableCategory, String> CATEGORIE_NAME = StringField.create(
        Identifier.CATEGORIE_NAME,
        PrintableCategory::getCategorieName,
        PrintableCategory::setCategorieName,
        TypeMapper.identity(), 
        false
    );
    
    /**
     * Returns the printableId of this PrintableCategory. The printableId field
     * corresponds to the database column
     * builpr.builpr.PrintableCategory.printable_id.
     * 
     * @return the printableId of this PrintableCategory
     */
    int getPrintableId();
    
    /**
     * Returns the categorieName of this PrintableCategory. The categorieName
     * field corresponds to the database column
     * builpr.builpr.PrintableCategory.categorie_name.
     * 
     * @return the categorieName of this PrintableCategory
     */
    String getCategorieName();
    
    /**
     * Sets the printableId of this PrintableCategory. The printableId field
     * corresponds to the database column
     * builpr.builpr.PrintableCategory.printable_id.
     * 
     * @param printableId to set of this PrintableCategory
     * @return            this PrintableCategory instance
     */
    PrintableCategory setPrintableId(int printableId);
    
    /**
     * Sets the categorieName of this PrintableCategory. The categorieName field
     * corresponds to the database column
     * builpr.builpr.PrintableCategory.categorie_name.
     * 
     * @param categorieName to set of this PrintableCategory
     * @return              this PrintableCategory instance
     */
    PrintableCategory setCategorieName(String categorieName);
    
    /**
     * Queries the specified manager for the referenced Printable. If no such
     * Printable exists, an {@code NullPointerException} will be thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    Printable findPrintableId(Manager<Printable> foreignManager);
    
    enum Identifier implements ColumnIdentifier<PrintableCategory> {
        
        PRINTABLE_ID   ("printable_id"),
        CATEGORIE_NAME ("categorie_name");
        
        private final String columnName;
        private final TableIdentifier<PrintableCategory> tableIdentifier;
        
        Identifier(String columnName) {
            this.columnName      = columnName;
            this.tableIdentifier = TableIdentifier.of(    getDbmsName(), 
                getSchemaName(), 
                getTableName());
        }
        
        @Override
        public String getDbmsName() {
            return "builpr";
        }
        
        @Override
        public String getSchemaName() {
            return "builpr";
        }
        
        @Override
        public String getTableName() {
            return "PrintableCategory";
        }
        
        @Override
        public String getColumnName() {
            return this.columnName;
        }
        
        @Override
        public TableIdentifier<PrintableCategory> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}