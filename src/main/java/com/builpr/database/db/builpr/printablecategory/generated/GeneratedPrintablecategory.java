package com.builpr.database.db.builpr.printablecategory.generated;

import com.builpr.database.db.builpr.printable.Printable;
import com.builpr.database.db.builpr.printablecategory.Printablecategory;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.Manager;
import com.speedment.runtime.field.IntForeignKeyField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;

/**
 * The generated base for the {@link
 * com.builpr.database.db.builpr.printablecategory.Printablecategory}-interface
 * representing entities of the {@code printablecategory}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedPrintablecategory {
    
    /**
     * This Field corresponds to the {@link Printablecategory} field that can be
     * obtained using the {@link Printablecategory#getPrintableId()} method.
     */
    IntForeignKeyField<Printablecategory, Integer, Printable> PRINTABLE_ID = IntForeignKeyField.create(
        Identifier.PRINTABLE_ID,
        Printablecategory::getPrintableId,
        Printablecategory::setPrintableId,
        Printable.PRINTABLE_ID,
        TypeMapper.primitive(), 
        false
    );
    /**
     * This Field corresponds to the {@link Printablecategory} field that can be
     * obtained using the {@link Printablecategory#getCategorieName()} method.
     */
    StringField<Printablecategory, String> CATEGORIE_NAME = StringField.create(
        Identifier.CATEGORIE_NAME,
        Printablecategory::getCategorieName,
        Printablecategory::setCategorieName,
        TypeMapper.identity(), 
        false
    );
    
    /**
     * Returns the printableId of this Printablecategory. The printableId field
     * corresponds to the database column
     * builpr.builpr.printablecategory.printable_id.
     * 
     * @return the printableId of this Printablecategory
     */
    int getPrintableId();
    
    /**
     * Returns the categorieName of this Printablecategory. The categorieName
     * field corresponds to the database column
     * builpr.builpr.printablecategory.categorie_name.
     * 
     * @return the categorieName of this Printablecategory
     */
    String getCategorieName();
    
    /**
     * Sets the printableId of this Printablecategory. The printableId field
     * corresponds to the database column
     * builpr.builpr.printablecategory.printable_id.
     * 
     * @param printableId to set of this Printablecategory
     * @return            this Printablecategory instance
     */
    Printablecategory setPrintableId(int printableId);
    
    /**
     * Sets the categorieName of this Printablecategory. The categorieName field
     * corresponds to the database column
     * builpr.builpr.printablecategory.categorie_name.
     * 
     * @param categorieName to set of this Printablecategory
     * @return              this Printablecategory instance
     */
    Printablecategory setCategorieName(String categorieName);
    
    /**
     * Queries the specified manager for the referenced Printable. If no such
     * Printable exists, an {@code NullPointerException} will be thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    Printable findPrintableId(Manager<Printable> foreignManager);
    
    enum Identifier implements ColumnIdentifier<Printablecategory> {
        
        PRINTABLE_ID   ("printable_id"),
        CATEGORIE_NAME ("categorie_name");
        
        private final String columnName;
        private final TableIdentifier<Printablecategory> tableIdentifier;
        
        Identifier(String columnName) {
            this.columnName      = columnName;
            this.tableIdentifier = TableIdentifier.of(    getDbmsName(), 
                getSchemaName(), 
                getTableName());
        }
        
        @Override
        public String getDbmsName() {
            return "builpr";
        }
        
        @Override
        public String getSchemaName() {
            return "builpr";
        }
        
        @Override
        public String getTableName() {
            return "printablecategory";
        }
        
        @Override
        public String getColumnName() {
            return this.columnName;
        }
        
        @Override
        public TableIdentifier<Printablecategory> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}