package com.builpr.database.db.builpr.model.generated;

import com.builpr.database.db.builpr.model.Model;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.util.OptionalUtil;
import com.speedment.runtime.field.BooleanField;
import com.speedment.runtime.field.ComparableField;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;
import com.speedment.runtime.typemapper.integer.PrimitiveIntegerZeroOneToBooleanMapper;
import java.sql.Date;
import java.util.Optional;

/**
 * The generated base for the {@link
 * com.builpr.database.db.builpr.model.Model}-interface representing entities of
 * the {@code Model}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedModel {
    
    /**
     * This Field corresponds to the {@link Model} field that can be obtained
     * using the {@link Model#getMid()} method.
     */
    final IntField<Model, Integer> MID = IntField.create(
        Identifier.MID,
        Model::getMid,
        Model::setMid,
        TypeMapper.primitive(), 
        true
    );
    /**
     * This Field corresponds to the {@link Model} field that can be obtained
     * using the {@link Model#getTitle()} method.
     */
    final StringField<Model, String> TITLE = StringField.create(
        Identifier.TITLE,
        Model::getTitle,
        Model::setTitle,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link Model} field that can be obtained
     * using the {@link Model#getDescription()} method.
     */
    final StringField<Model, String> DESCRIPTION = StringField.create(
        Identifier.DESCRIPTION,
        o -> OptionalUtil.unwrap(o.getDescription()),
        Model::setDescription,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link Model} field that can be obtained
     * using the {@link Model#getFile()} method.
     */
    final StringField<Model, String> FILE = StringField.create(
        Identifier.FILE,
        Model::getFile,
        Model::setFile,
        TypeMapper.identity(), 
        true
    );
    /**
     * This Field corresponds to the {@link Model} field that can be obtained
     * using the {@link Model#getAgeRestriction()} method.
     */
    final BooleanField<Model, Integer> AGE_RESTRICTION = BooleanField.create(
        Identifier.AGE_RESTRICTION,
        Model::getAgeRestriction,
        Model::setAgeRestriction,
        new PrimitiveIntegerZeroOneToBooleanMapper(), 
        false
    );
    /**
     * This Field corresponds to the {@link Model} field that can be obtained
     * using the {@link Model#getUid()} method.
     */
    final IntField<Model, Integer> UID = IntField.create(
        Identifier.UID,
        Model::getUid,
        Model::setUid,
        TypeMapper.primitive(), 
        false
    );
    /**
     * This Field corresponds to the {@link Model} field that can be obtained
     * using the {@link Model#getUploadDate()} method.
     */
    final ComparableField<Model, Date, Date> UPLOAD_DATE = ComparableField.create(
        Identifier.UPLOAD_DATE,
        Model::getUploadDate,
        Model::setUploadDate,
        TypeMapper.identity(), 
        false
    );
    
    /**
     * Returns the mid of this Model. The mid field corresponds to the database
     * column builpr.com.builpr.Model.mid.
     * 
     * @return the mid of this Model
     */
    int getMid();
    
    /**
     * Returns the title of this Model. The title field corresponds to the
     * database column builpr.com.builpr.Model.title.
     * 
     * @return the title of this Model
     */
    String getTitle();
    
    /**
     * Returns the description of this Model. The description field corresponds
     * to the database column builpr.com.builpr.Model.description.
     * 
     * @return the description of this Model
     */
    Optional<String> getDescription();
    
    /**
     * Returns the file of this Model. The file field corresponds to the
     * database column builpr.com.builpr.Model.file.
     * 
     * @return the file of this Model
     */
    String getFile();
    
    /**
     * Returns the ageRestriction of this Model. The ageRestriction field
     * corresponds to the database column
     * builpr.com.builpr.Model.age_restriction.
     * 
     * @return the ageRestriction of this Model
     */
    boolean getAgeRestriction();
    
    /**
     * Returns the uid of this Model. The uid field corresponds to the database
     * column builpr.com.builpr.Model.uid.
     * 
     * @return the uid of this Model
     */
    int getUid();
    
    /**
     * Returns the uploadDate of this Model. The uploadDate field corresponds to
     * the database column builpr.com.builpr.Model.upload_date.
     * 
     * @return the uploadDate of this Model
     */
    Date getUploadDate();
    
    /**
     * Sets the mid of this Model. The mid field corresponds to the database
     * column builpr.com.builpr.Model.mid.
     * 
     * @param mid to set of this Model
     * @return    this Model instance
     */
    Model setMid(int mid);
    
    /**
     * Sets the title of this Model. The title field corresponds to the database
     * column builpr.com.builpr.Model.title.
     * 
     * @param title to set of this Model
     * @return      this Model instance
     */
    Model setTitle(String title);
    
    /**
     * Sets the description of this Model. The description field corresponds to
     * the database column builpr.com.builpr.Model.description.
     * 
     * @param description to set of this Model
     * @return            this Model instance
     */
    Model setDescription(String description);
    
    /**
     * Sets the file of this Model. The file field corresponds to the database
     * column builpr.com.builpr.Model.file.
     * 
     * @param file to set of this Model
     * @return     this Model instance
     */
    Model setFile(String file);
    
    /**
     * Sets the ageRestriction of this Model. The ageRestriction field
     * corresponds to the database column
     * builpr.com.builpr.Model.age_restriction.
     * 
     * @param ageRestriction to set of this Model
     * @return               this Model instance
     */
    Model setAgeRestriction(boolean ageRestriction);
    
    /**
     * Sets the uid of this Model. The uid field corresponds to the database
     * column builpr.com.builpr.Model.uid.
     * 
     * @param uid to set of this Model
     * @return    this Model instance
     */
    Model setUid(int uid);
    
    /**
     * Sets the uploadDate of this Model. The uploadDate field corresponds to
     * the database column builpr.com.builpr.Model.upload_date.
     * 
     * @param uploadDate to set of this Model
     * @return           this Model instance
     */
    Model setUploadDate(Date uploadDate);
    
    enum Identifier implements ColumnIdentifier<Model> {
        
        MID             ("mid"),
        TITLE           ("title"),
        DESCRIPTION     ("description"),
        FILE            ("file"),
        AGE_RESTRICTION ("age_restriction"),
        UID             ("uid"),
        UPLOAD_DATE     ("upload_date");
        
        private final String columnName;
        private final TableIdentifier<Model> tableIdentifier;
        
        Identifier(String columnName) {
            this.columnName      = columnName;
            this.tableIdentifier = TableIdentifier.of(    getDbmsName(), 
                getSchemaName(), 
                getTableName());
        }
        
        @Override
        public String getDbmsName() {
            return "builpr.com";
        }
        
        @Override
        public String getSchemaName() {
            return "builpr";
        }
        
        @Override
        public String getTableName() {
            return "Model";
        }
        
        @Override
        public String getColumnName() {
            return this.columnName;
        }
        
        @Override
        public TableIdentifier<Model> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}