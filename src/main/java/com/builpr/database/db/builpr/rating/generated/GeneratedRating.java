package com.builpr.database.db.builpr.rating.generated;

import com.builpr.database.db.builpr.rating.Rating;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.util.OptionalUtil;
import com.speedment.runtime.field.ComparableField;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;
import java.sql.Date;
import java.util.Optional;

/**
 * The generated base for the {@link
 * com.builpr.database.db.builpr.rating.Rating}-interface representing entities
 * of the {@code Rating}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedRating {
    
    /**
     * This Field corresponds to the {@link Rating} field that can be obtained
     * using the {@link Rating#getUid()} method.
     */
    final IntField<Rating, Integer> UID = IntField.create(
        Identifier.UID,
        Rating::getUid,
        Rating::setUid,
        TypeMapper.primitive(), 
        false
    );
    /**
     * This Field corresponds to the {@link Rating} field that can be obtained
     * using the {@link Rating#getMid()} method.
     */
    final IntField<Rating, Integer> MID = IntField.create(
        Identifier.MID,
        Rating::getMid,
        Rating::setMid,
        TypeMapper.primitive(), 
        false
    );
    /**
     * This Field corresponds to the {@link Rating} field that can be obtained
     * using the {@link Rating#getRating()} method.
     */
    final IntField<Rating, Integer> RATING = IntField.create(
        Identifier.RATING,
        Rating::getRating,
        Rating::setRating,
        TypeMapper.primitive(), 
        false
    );
    /**
     * This Field corresponds to the {@link Rating} field that can be obtained
     * using the {@link Rating#getMsg()} method.
     */
    final StringField<Rating, String> MSG = StringField.create(
        Identifier.MSG,
        o -> OptionalUtil.unwrap(o.getMsg()),
        Rating::setMsg,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link Rating} field that can be obtained
     * using the {@link Rating#getRatingTime()} method.
     */
    final ComparableField<Rating, Date, Date> RATING_TIME = ComparableField.create(
        Identifier.RATING_TIME,
        Rating::getRatingTime,
        Rating::setRatingTime,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link Rating} field that can be obtained
     * using the {@link Rating#getRid()} method.
     */
    final IntField<Rating, Integer> RID = IntField.create(
        Identifier.RID,
        Rating::getRid,
        Rating::setRid,
        TypeMapper.primitive(), 
        true
    );
    
    /**
     * Returns the uid of this Rating. The uid field corresponds to the database
     * column builpr.com.builpr.Rating.uid.
     * 
     * @return the uid of this Rating
     */
    int getUid();
    
    /**
     * Returns the mid of this Rating. The mid field corresponds to the database
     * column builpr.com.builpr.Rating.mid.
     * 
     * @return the mid of this Rating
     */
    int getMid();
    
    /**
     * Returns the rating of this Rating. The rating field corresponds to the
     * database column builpr.com.builpr.Rating.rating.
     * 
     * @return the rating of this Rating
     */
    int getRating();
    
    /**
     * Returns the msg of this Rating. The msg field corresponds to the database
     * column builpr.com.builpr.Rating.msg.
     * 
     * @return the msg of this Rating
     */
    Optional<String> getMsg();
    
    /**
     * Returns the ratingTime of this Rating. The ratingTime field corresponds
     * to the database column builpr.com.builpr.Rating.rating_time.
     * 
     * @return the ratingTime of this Rating
     */
    Date getRatingTime();
    
    /**
     * Returns the rid of this Rating. The rid field corresponds to the database
     * column builpr.com.builpr.Rating.rid.
     * 
     * @return the rid of this Rating
     */
    int getRid();
    
    /**
     * Sets the uid of this Rating. The uid field corresponds to the database
     * column builpr.com.builpr.Rating.uid.
     * 
     * @param uid to set of this Rating
     * @return    this Rating instance
     */
    Rating setUid(int uid);
    
    /**
     * Sets the mid of this Rating. The mid field corresponds to the database
     * column builpr.com.builpr.Rating.mid.
     * 
     * @param mid to set of this Rating
     * @return    this Rating instance
     */
    Rating setMid(int mid);
    
    /**
     * Sets the rating of this Rating. The rating field corresponds to the
     * database column builpr.com.builpr.Rating.rating.
     * 
     * @param rating to set of this Rating
     * @return       this Rating instance
     */
    Rating setRating(int rating);
    
    /**
     * Sets the msg of this Rating. The msg field corresponds to the database
     * column builpr.com.builpr.Rating.msg.
     * 
     * @param msg to set of this Rating
     * @return    this Rating instance
     */
    Rating setMsg(String msg);
    
    /**
     * Sets the ratingTime of this Rating. The ratingTime field corresponds to
     * the database column builpr.com.builpr.Rating.rating_time.
     * 
     * @param ratingTime to set of this Rating
     * @return           this Rating instance
     */
    Rating setRatingTime(Date ratingTime);
    
    /**
     * Sets the rid of this Rating. The rid field corresponds to the database
     * column builpr.com.builpr.Rating.rid.
     * 
     * @param rid to set of this Rating
     * @return    this Rating instance
     */
    Rating setRid(int rid);
    
    enum Identifier implements ColumnIdentifier<Rating> {
        
        UID         ("uid"),
        MID         ("mid"),
        RATING      ("rating"),
        MSG         ("msg"),
        RATING_TIME ("rating_time"),
        RID         ("rid");
        
        private final String columnName;
        private final TableIdentifier<Rating> tableIdentifier;
        
        Identifier(String columnName) {
            this.columnName      = columnName;
            this.tableIdentifier = TableIdentifier.of(    getDbmsName(), 
                getSchemaName(), 
                getTableName());
        }
        
        @Override
        public String getDbmsName() {
            return "builpr.com";
        }
        
        @Override
        public String getSchemaName() {
            return "builpr";
        }
        
        @Override
        public String getTableName() {
            return "Rating";
        }
        
        @Override
        public String getColumnName() {
            return this.columnName;
        }
        
        @Override
        public TableIdentifier<Rating> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}