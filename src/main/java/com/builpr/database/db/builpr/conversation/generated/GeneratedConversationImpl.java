package com.builpr.database.db.builpr.conversation.generated;

import com.builpr.database.db.builpr.conversation.Conversation;
import com.builpr.database.db.builpr.user.User;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.manager.Manager;
import java.sql.Timestamp;
import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.builpr.database.db.builpr.conversation.Conversation}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedConversationImpl implements Conversation {
    
    private int conversationId;
    private int userId1;
    private int userId2;
    private Timestamp createDate;
    private Timestamp lastMsgTime;
    
    protected GeneratedConversationImpl() {
        
    }
    
    @Override
    public int getConversationId() {
        return conversationId;
    }
    
    @Override
    public int getUserId1() {
        return userId1;
    }
    
    @Override
    public int getUserId2() {
        return userId2;
    }
    
    @Override
    public Timestamp getCreateDate() {
        return createDate;
    }
    
    @Override
    public Timestamp getLastMsgTime() {
        return lastMsgTime;
    }
    
    @Override
    public Conversation setConversationId(int conversationId) {
        this.conversationId = conversationId;
        return this;
    }
    
    @Override
    public Conversation setUserId1(int userId1) {
        this.userId1 = userId1;
        return this;
    }
    
    @Override
    public Conversation setUserId2(int userId2) {
        this.userId2 = userId2;
        return this;
    }
    
    @Override
    public Conversation setCreateDate(Timestamp createDate) {
        this.createDate = createDate;
        return this;
    }
    
    @Override
    public Conversation setLastMsgTime(Timestamp lastMsgTime) {
        this.lastMsgTime = lastMsgTime;
        return this;
    }
    
    @Override
    public User findUserId1(Manager<User> foreignManager) {
        return foreignManager.stream().filter(User.USER_ID.equal(getUserId1())).findAny().orElse(null);
    }
    
    @Override
    public User findUserId2(Manager<User> foreignManager) {
        return foreignManager.stream().filter(User.USER_ID.equal(getUserId2())).findAny().orElse(null);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("conversationId = " + Objects.toString(getConversationId()));
        sj.add("userId1 = "        + Objects.toString(getUserId1()));
        sj.add("userId2 = "        + Objects.toString(getUserId2()));
        sj.add("createDate = "     + Objects.toString(getCreateDate()));
        sj.add("lastMsgTime = "    + Objects.toString(getLastMsgTime()));
        return "ConversationImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Conversation)) { return false; }
        final Conversation thatConversation = (Conversation)that;
        if (this.getConversationId() != thatConversation.getConversationId()) {return false; }
        if (this.getUserId1() != thatConversation.getUserId1()) {return false; }
        if (this.getUserId2() != thatConversation.getUserId2()) {return false; }
        if (!Objects.equals(this.getCreateDate(), thatConversation.getCreateDate())) {return false; }
        if (!Objects.equals(this.getLastMsgTime(), thatConversation.getLastMsgTime())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getConversationId());
        hash = 31 * hash + Integer.hashCode(getUserId1());
        hash = 31 * hash + Integer.hashCode(getUserId2());
        hash = 31 * hash + Objects.hashCode(getCreateDate());
        hash = 31 * hash + Objects.hashCode(getLastMsgTime());
        return hash;
    }
}