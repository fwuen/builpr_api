package com.builpr.database.db.builpr.comingsoon.generated;

import com.builpr.database.db.builpr.comingsoon.Comingsoon;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;
import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.builpr.database.db.builpr.comingsoon.Comingsoon}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedComingsoonImpl implements Comingsoon {
    
    private int id;
    private String email;
    private int activated;
    private String key;
    
    protected GeneratedComingsoonImpl() {
        
    }
    
    @Override
    public int getId() {
        return id;
    }
    
    @Override
    public String getEmail() {
        return email;
    }
    
    @Override
    public int getActivated() {
        return activated;
    }
    
    @Override
    public Optional<String> getKey() {
        return Optional.ofNullable(key);
    }
    
    @Override
    public Comingsoon setId(int id) {
        this.id = id;
        return this;
    }
    
    @Override
    public Comingsoon setEmail(String email) {
        this.email = email;
        return this;
    }
    
    @Override
    public Comingsoon setActivated(int activated) {
        this.activated = activated;
        return this;
    }
    
    @Override
    public Comingsoon setKey(String key) {
        this.key = key;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "        + Objects.toString(getId()));
        sj.add("email = "     + Objects.toString(getEmail()));
        sj.add("activated = " + Objects.toString(getActivated()));
        sj.add("key = "       + Objects.toString(OptionalUtil.unwrap(getKey())));
        return "ComingsoonImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Comingsoon)) { return false; }
        final Comingsoon thatComingsoon = (Comingsoon)that;
        if (this.getId() != thatComingsoon.getId()) {return false; }
        if (!Objects.equals(this.getEmail(), thatComingsoon.getEmail())) {return false; }
        if (this.getActivated() != thatComingsoon.getActivated()) {return false; }
        if (!Objects.equals(this.getKey(), thatComingsoon.getKey())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(getEmail());
        hash = 31 * hash + Integer.hashCode(getActivated());
        hash = 31 * hash + Objects.hashCode(getKey());
        return hash;
    }
}