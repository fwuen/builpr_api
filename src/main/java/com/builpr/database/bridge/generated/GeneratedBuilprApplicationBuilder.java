package com.builpr.database.bridge.generated;

import com.builpr.database.bridge.BuilprApplication;
import com.builpr.database.bridge.BuilprApplicationBuilder;
import com.builpr.database.bridge.BuilprApplicationImpl;
import com.builpr.database.bridge.category.CategoryManagerImpl;
import com.builpr.database.bridge.category.CategorySqlAdapter;
import com.builpr.database.bridge.message.MessageManagerImpl;
import com.builpr.database.bridge.message.MessageSqlAdapter;
import com.builpr.database.bridge.printable.PrintableManagerImpl;
import com.builpr.database.bridge.printable.PrintableSqlAdapter;
import com.builpr.database.bridge.printable_category.PrintableCategoryManagerImpl;
import com.builpr.database.bridge.printable_category.PrintableCategorySqlAdapter;
import com.builpr.database.bridge.rating.RatingManagerImpl;
import com.builpr.database.bridge.rating.RatingSqlAdapter;
import com.builpr.database.bridge.register_confirmation_token.RegisterConfirmationTokenManagerImpl;
import com.builpr.database.bridge.register_confirmation_token.RegisterConfirmationTokenSqlAdapter;
import com.builpr.database.bridge.user.UserManagerImpl;
import com.builpr.database.bridge.user.UserSqlAdapter;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.common.injector.Injector;
import com.speedment.runtime.core.internal.AbstractApplicationBuilder;

/**
 * A generated base {@link
 * com.speedment.runtime.core.internal.AbstractApplicationBuilder} class for the
 * {@link com.speedment.runtime.config.Project} named builpr.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedBuilprApplicationBuilder extends AbstractApplicationBuilder<BuilprApplication, BuilprApplicationBuilder> {
    
    protected GeneratedBuilprApplicationBuilder() {
        super(BuilprApplicationImpl.class, GeneratedBuilprMetadata.class);
        withManager(CategoryManagerImpl.class);
        withManager(MessageManagerImpl.class);
        withManager(PrintableManagerImpl.class);
        withManager(PrintableCategoryManagerImpl.class);
        withManager(RatingManagerImpl.class);
        withManager(RegisterConfirmationTokenManagerImpl.class);
        withManager(UserManagerImpl.class);
        withComponent(CategorySqlAdapter.class);
        withComponent(MessageSqlAdapter.class);
        withComponent(PrintableSqlAdapter.class);
        withComponent(PrintableCategorySqlAdapter.class);
        withComponent(RatingSqlAdapter.class);
        withComponent(RegisterConfirmationTokenSqlAdapter.class);
        withComponent(UserSqlAdapter.class);
    }
    
    @Override
    public BuilprApplication build(Injector injector) {
        return injector.getOrThrow(BuilprApplication.class);
    }
}