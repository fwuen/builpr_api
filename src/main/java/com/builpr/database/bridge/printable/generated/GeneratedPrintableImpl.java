package com.builpr.database.bridge.printable.generated;

import com.builpr.database.bridge.printable.Printable;
import com.builpr.database.bridge.user.User;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.manager.Manager;
import com.speedment.runtime.core.util.OptionalUtil;
import java.sql.Date;
import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.builpr.database.bridge.printable.Printable}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedPrintableImpl implements Printable {
    
    private int printableId;
    private String title;
    private String description;
    private int uploaderId;
    private Date uploadDate;
    private String filePath;
    private int numDownloads;
    
    protected GeneratedPrintableImpl() {
        
    }
    
    @Override
    public int getPrintableId() {
        return printableId;
    }
    
    @Override
    public String getTitle() {
        return title;
    }
    
    @Override
    public Optional<String> getDescription() {
        return Optional.ofNullable(description);
    }
    
    @Override
    public int getUploaderId() {
        return uploaderId;
    }
    
    @Override
    public Date getUploadDate() {
        return uploadDate;
    }
    
    @Override
    public String getFilePath() {
        return filePath;
    }
    
    @Override
    public int getNumDownloads() {
        return numDownloads;
    }
    
    @Override
    public Printable setPrintableId(int printableId) {
        this.printableId = printableId;
        return this;
    }
    
    @Override
    public Printable setTitle(String title) {
        this.title = title;
        return this;
    }
    
    @Override
    public Printable setDescription(String description) {
        this.description = description;
        return this;
    }
    
    @Override
    public Printable setUploaderId(int uploaderId) {
        this.uploaderId = uploaderId;
        return this;
    }
    
    @Override
    public Printable setUploadDate(Date uploadDate) {
        this.uploadDate = uploadDate;
        return this;
    }
    
    @Override
    public Printable setFilePath(String filePath) {
        this.filePath = filePath;
        return this;
    }
    
    @Override
    public Printable setNumDownloads(int numDownloads) {
        this.numDownloads = numDownloads;
        return this;
    }
    
    @Override
    public User findUploaderId(Manager<User> foreignManager) {
        return foreignManager.stream().filter(User.USER_ID.equal(getUploaderId())).findAny().orElse(null);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("printableId = "  + Objects.toString(getPrintableId()));
        sj.add("title = "        + Objects.toString(getTitle()));
        sj.add("description = "  + Objects.toString(OptionalUtil.unwrap(getDescription())));
        sj.add("uploaderId = "   + Objects.toString(getUploaderId()));
        sj.add("uploadDate = "   + Objects.toString(getUploadDate()));
        sj.add("filePath = "     + Objects.toString(getFilePath()));
        sj.add("numDownloads = " + Objects.toString(getNumDownloads()));
        return "PrintableImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Printable)) { return false; }
        final Printable thatPrintable = (Printable)that;
        if (this.getPrintableId() != thatPrintable.getPrintableId()) {return false; }
        if (!Objects.equals(this.getTitle(), thatPrintable.getTitle())) {return false; }
        if (!Objects.equals(this.getDescription(), thatPrintable.getDescription())) {return false; }
        if (this.getUploaderId() != thatPrintable.getUploaderId()) {return false; }
        if (!Objects.equals(this.getUploadDate(), thatPrintable.getUploadDate())) {return false; }
        if (!Objects.equals(this.getFilePath(), thatPrintable.getFilePath())) {return false; }
        if (this.getNumDownloads() != thatPrintable.getNumDownloads()) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getPrintableId());
        hash = 31 * hash + Objects.hashCode(getTitle());
        hash = 31 * hash + Objects.hashCode(getDescription());
        hash = 31 * hash + Integer.hashCode(getUploaderId());
        hash = 31 * hash + Objects.hashCode(getUploadDate());
        hash = 31 * hash + Objects.hashCode(getFilePath());
        hash = 31 * hash + Integer.hashCode(getNumDownloads());
        return hash;
    }
}