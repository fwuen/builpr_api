package com.builpr.database.bridge.message.generated;

import com.builpr.database.bridge.message.Message;
import com.builpr.database.bridge.user.User;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.Manager;
import com.speedment.runtime.field.BooleanField;
import com.speedment.runtime.field.ComparableField;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.IntForeignKeyField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;
import com.speedment.runtime.typemapper.integer.PrimitiveIntegerZeroOneToBooleanMapper;
import java.sql.Timestamp;

/**
 * The generated base for the {@link
 * com.builpr.database.bridge.message.Message}-interface representing entities
 * of the {@code message}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedMessage {
    
    /**
     * This Field corresponds to the {@link Message} field that can be obtained
     * using the {@link Message#getMessageId()} method.
     */
    IntField<Message, Integer> MESSAGE_ID = IntField.create(
        Identifier.MESSAGE_ID,
        Message::getMessageId,
        Message::setMessageId,
        TypeMapper.primitive(), 
        true
    );
    /**
     * This Field corresponds to the {@link Message} field that can be obtained
     * using the {@link Message#getSenderId()} method.
     */
    IntForeignKeyField<Message, Integer, User> SENDER_ID = IntForeignKeyField.create(
        Identifier.SENDER_ID,
        Message::getSenderId,
        Message::setSenderId,
        User.USER_ID,
        TypeMapper.primitive(), 
        false
    );
    /**
     * This Field corresponds to the {@link Message} field that can be obtained
     * using the {@link Message#getReceiverId()} method.
     */
    IntForeignKeyField<Message, Integer, User> RECEIVER_ID = IntForeignKeyField.create(
        Identifier.RECEIVER_ID,
        Message::getReceiverId,
        Message::setReceiverId,
        User.USER_ID,
        TypeMapper.primitive(), 
        false
    );
    /**
     * This Field corresponds to the {@link Message} field that can be obtained
     * using the {@link Message#getText()} method.
     */
    StringField<Message, String> TEXT = StringField.create(
        Identifier.TEXT,
        Message::getText,
        Message::setText,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link Message} field that can be obtained
     * using the {@link Message#getRead()} method.
     */
    BooleanField<Message, Integer> READ = BooleanField.create(
        Identifier.READ,
        Message::getRead,
        Message::setRead,
        new PrimitiveIntegerZeroOneToBooleanMapper(), 
        false
    );
    /**
     * This Field corresponds to the {@link Message} field that can be obtained
     * using the {@link Message#getSendTime()} method.
     */
    ComparableField<Message, Timestamp, Timestamp> SEND_TIME = ComparableField.create(
        Identifier.SEND_TIME,
        Message::getSendTime,
        Message::setSendTime,
        TypeMapper.identity(), 
        false
    );
    
    /**
     * Returns the messageId of this Message. The messageId field corresponds to
     * the database column builpr.builpr.message.message_id.
     * 
     * @return the messageId of this Message
     */
    int getMessageId();
    
    /**
     * Returns the senderId of this Message. The senderId field corresponds to
     * the database column builpr.builpr.message.sender_id.
     * 
     * @return the senderId of this Message
     */
    int getSenderId();
    
    /**
     * Returns the receiverId of this Message. The receiverId field corresponds
     * to the database column builpr.builpr.message.receiver_id.
     * 
     * @return the receiverId of this Message
     */
    int getReceiverId();
    
    /**
     * Returns the text of this Message. The text field corresponds to the
     * database column builpr.builpr.message.text.
     * 
     * @return the text of this Message
     */
    String getText();
    
    /**
     * Returns the read of this Message. The read field corresponds to the
     * database column builpr.builpr.message.read.
     * 
     * @return the read of this Message
     */
    boolean getRead();
    
    /**
     * Returns the sendTime of this Message. The sendTime field corresponds to
     * the database column builpr.builpr.message.send_time.
     * 
     * @return the sendTime of this Message
     */
    Timestamp getSendTime();
    
    /**
     * Sets the messageId of this Message. The messageId field corresponds to
     * the database column builpr.builpr.message.message_id.
     * 
     * @param messageId to set of this Message
     * @return          this Message instance
     */
    Message setMessageId(int messageId);
    
    /**
     * Sets the senderId of this Message. The senderId field corresponds to the
     * database column builpr.builpr.message.sender_id.
     * 
     * @param senderId to set of this Message
     * @return         this Message instance
     */
    Message setSenderId(int senderId);
    
    /**
     * Sets the receiverId of this Message. The receiverId field corresponds to
     * the database column builpr.builpr.message.receiver_id.
     * 
     * @param receiverId to set of this Message
     * @return           this Message instance
     */
    Message setReceiverId(int receiverId);
    
    /**
     * Sets the text of this Message. The text field corresponds to the database
     * column builpr.builpr.message.text.
     * 
     * @param text to set of this Message
     * @return     this Message instance
     */
    Message setText(String text);
    
    /**
     * Sets the read of this Message. The read field corresponds to the database
     * column builpr.builpr.message.read.
     * 
     * @param read to set of this Message
     * @return     this Message instance
     */
    Message setRead(boolean read);
    
    /**
     * Sets the sendTime of this Message. The sendTime field corresponds to the
     * database column builpr.builpr.message.send_time.
     * 
     * @param sendTime to set of this Message
     * @return         this Message instance
     */
    Message setSendTime(Timestamp sendTime);
    
    /**
     * Queries the specified manager for the referenced User. If no such User
     * exists, an {@code NullPointerException} will be thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    User findSenderId(Manager<User> foreignManager);
    
    /**
     * Queries the specified manager for the referenced User. If no such User
     * exists, an {@code NullPointerException} will be thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    User findReceiverId(Manager<User> foreignManager);
    
    enum Identifier implements ColumnIdentifier<Message> {
        
        MESSAGE_ID  ("message_id"),
        SENDER_ID   ("sender_id"),
        RECEIVER_ID ("receiver_id"),
        TEXT        ("text"),
        READ        ("read"),
        SEND_TIME   ("send_time");
        
        private final String columnName;
        private final TableIdentifier<Message> tableIdentifier;
        
        Identifier(String columnName) {
            this.columnName      = columnName;
            this.tableIdentifier = TableIdentifier.of(    getDbmsName(), 
                getSchemaName(), 
                getTableName());
        }
        
        @Override
        public String getDbmsName() {
            return "builpr";
        }
        
        @Override
        public String getSchemaName() {
            return "builpr";
        }
        
        @Override
        public String getTableName() {
            return "message";
        }
        
        @Override
        public String getColumnName() {
            return this.columnName;
        }
        
        @Override
        public TableIdentifier<Message> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}