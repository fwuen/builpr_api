package com.builpr.database.bridge.rating.generated;

import com.builpr.database.bridge.printable.Printable;
import com.builpr.database.bridge.rating.Rating;
import com.builpr.database.bridge.user.User;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.manager.Manager;
import com.speedment.runtime.core.util.OptionalUtil;
import java.sql.Date;
import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.builpr.database.bridge.rating.Rating}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedRatingImpl implements Rating {
    
    private int userId;
    private int printableId;
    private int rating;
    private String msg;
    private Date ratingTime;
    private int ratingId;
    
    protected GeneratedRatingImpl() {
        
    }
    
    @Override
    public int getUserId() {
        return userId;
    }
    
    @Override
    public int getPrintableId() {
        return printableId;
    }
    
    @Override
    public int getRating() {
        return rating;
    }
    
    @Override
    public Optional<String> getMsg() {
        return Optional.ofNullable(msg);
    }
    
    @Override
    public Date getRatingTime() {
        return ratingTime;
    }
    
    @Override
    public int getRatingId() {
        return ratingId;
    }
    
    @Override
    public Rating setUserId(int userId) {
        this.userId = userId;
        return this;
    }
    
    @Override
    public Rating setPrintableId(int printableId) {
        this.printableId = printableId;
        return this;
    }
    
    @Override
    public Rating setRating(int rating) {
        this.rating = rating;
        return this;
    }
    
    @Override
    public Rating setMsg(String msg) {
        this.msg = msg;
        return this;
    }
    
    @Override
    public Rating setRatingTime(Date ratingTime) {
        this.ratingTime = ratingTime;
        return this;
    }
    
    @Override
    public Rating setRatingId(int ratingId) {
        this.ratingId = ratingId;
        return this;
    }
    
    @Override
    public User findUserId(Manager<User> foreignManager) {
        return foreignManager.stream().filter(User.USER_ID.equal(getUserId())).findAny().orElse(null);
    }
    
    @Override
    public Printable findPrintableId(Manager<Printable> foreignManager) {
        return foreignManager.stream().filter(Printable.PRINTABLE_ID.equal(getPrintableId())).findAny().orElse(null);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("userId = "      + Objects.toString(getUserId()));
        sj.add("printableId = " + Objects.toString(getPrintableId()));
        sj.add("rating = "      + Objects.toString(getRating()));
        sj.add("msg = "         + Objects.toString(OptionalUtil.unwrap(getMsg())));
        sj.add("ratingTime = "  + Objects.toString(getRatingTime()));
        sj.add("ratingId = "    + Objects.toString(getRatingId()));
        return "RatingImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Rating)) { return false; }
        final Rating thatRating = (Rating)that;
        if (this.getUserId() != thatRating.getUserId()) {return false; }
        if (this.getPrintableId() != thatRating.getPrintableId()) {return false; }
        if (this.getRating() != thatRating.getRating()) {return false; }
        if (!Objects.equals(this.getMsg(), thatRating.getMsg())) {return false; }
        if (!Objects.equals(this.getRatingTime(), thatRating.getRatingTime())) {return false; }
        if (this.getRatingId() != thatRating.getRatingId()) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getUserId());
        hash = 31 * hash + Integer.hashCode(getPrintableId());
        hash = 31 * hash + Integer.hashCode(getRating());
        hash = 31 * hash + Objects.hashCode(getMsg());
        hash = 31 * hash + Objects.hashCode(getRatingTime());
        hash = 31 * hash + Integer.hashCode(getRatingId());
        return hash;
    }
}